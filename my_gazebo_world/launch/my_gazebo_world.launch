<?xml version="1.0"?>
<launch>

    <!-- world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" default="$(find my_gazebo_world)/world/my_world.world"/>
      <arg name="paused" value="false"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="gui" value="true"/>
      <arg name="headless" value="false"/>
      <arg name="debug" value="false"/>
      <arg name="verbose" default="true"/>
      <arg name="respawn_gazebo" default="false"/>
    </include>

    <!--vehicle plane model -->
    <arg name="vehicle" default="iris"/>
    <arg name="my_model" default="my_iris_fpv_lidar"/>
    <arg name="sdf" default="$(find mavlink_sitl_gazebo)/models/$(arg my_model)/$(arg my_model).sdf"/>
    <arg name="est" default="ekf2"/>
    <env name="PX4_SIM_MODEL" value="$(arg vehicle)" />
    <env name="PX4_ESTIMATOR" value="$(arg est)" />
    <node name="plane" pkg="gazebo_ros" type="spawn_model" output="screen" args="-sdf -file $(arg sdf) -model $(arg vehicle) -x 1 -y 1 -z 0 -R 0 -P 0 -Y 0"/>
<!--    vehicle car model -->
<!--    <node-->
<!--            name="spawn_model"-->
<!--            pkg="gazebo_ros"-->
<!--            type="spawn_model"-->
<!--            args="-file $(find my_gazebo_world)/urdf/laser_receiver.SLDPRT.urdf -urdf -model laser_receiver.SLDPRT"-->
<!--            output="screen" />-->
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_waffle.urdf.xacro"/>
    <node name="car" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model turtlebot3_waffle -x 0 -y 0 -z 0"/>



    <!-- MAVROS configs -->
    <!--<arg name="fcu_url" default="udp://:14540@localhost:14557"/>-->
    <arg name="fcu_url" default="udp://:14540@127.0.0.1:14557"/>
    <arg name="respawn_mavros" default="false"/>
    <!-- PX4 configs -->
    <arg name="interactive" default="true"/>
    <arg unless="$(arg interactive)" name="px4_command_arg1" value="-d"/>
    <arg     if="$(arg interactive)" name="px4_command_arg1" value=""/>
    <node name="sitl" pkg="px4" type="px4" output="screen"
          args="$(find px4)/ROMFS/px4fmu_common -s etc/init.d-posix/rcS $(arg px4_command_arg1)" required="true"/>

    <!-- MAVROS -->
    <!-- GCS link is provided by SITL -->
    <arg name="gcs_url" value=""/>
<!--    <arg name="fcu_url" value="$(arg fcu_url)"/>-->
    <arg name="tgt_system" default="1" />
    <arg name="tgt_component" default="1" />
    <arg name="log_output" default="screen" />
    <arg name="fcu_protocol" default="v2.0" />
    <!--<arg name="respawn_mavros" default="false" />-->
    <!--px4_config.yaml-->
    <arg name="pluginlists_yaml" value="$(find mavros)/launch/px4_pluginlists.yaml" />
    <arg name="config_yaml" value="$(find mavros)/launch/px4_config.yaml" />
    <!-- mavros node.launch-->
    <node pkg="mavros" type="mavros_node" name="mavros" required="$(eval not respawn_mavros)" clear_params="true" output="$(arg log_output)" respawn="$(arg respawn_mavros)">
        <param name="fcu_url" value="$(arg fcu_url)" />
        <param name="gcs_url" value="$(arg gcs_url)" />
        <param name="target_system_id" value="$(arg tgt_system)" />
        <param name="target_component_id" value="$(arg tgt_component)" />
        <param name="fcu_protocol" value="$(arg fcu_protocol)" />

        <!-- load blacklist, config -->
        <rosparam command="load" file="$(arg pluginlists_yaml)" />
        <rosparam command="load" file="$(arg config_yaml)" />
    </node>
<!--publish robot position-->
<!--    <node pkg="tf" type="static_transform_publisher" name="static_world_to_odom_publisher" args="0 0 0 0 0 0 /world /odom 100"/>-->





</launch>
